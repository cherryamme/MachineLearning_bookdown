[["index.html", "A R Book For MachineLearning Chapter 1 About", " A R Book For MachineLearning Jesse_ÂßúËæ∞ ü§° 2021-11-05 ‚úÖ Chapter 1 About This is a R book for learning ML authored by jesse. I use many common models to predict Titanic Data-Set from kaggle. Hope for helping you. "],["package-i-use.html", "Chapter 2 Package I use", " Chapter 2 Package I use I seek for many packages to help me do this little project from Internet ,and finally I conclude some useful pakages that make a big sense for the workflow. packages I use: RÂåÖ ‰ΩúÁî® tidyverse DataExplorer DescTools autoEDA explore PerformanceAnalytics randomForest plotly languageserver httpgd validated SmartEDA missForest dataReporter "],["import-data.html", "Chapter 3 import Data 3.1 Data From 3.2 Variable_Explain 3.3 View of datasets", " Chapter 3 import Data First step is import data, there are countless tutorials you can find on Internet. So I introduce this part simplely. Usually we use base-R for importing data like below command - read.table()|read.csv()|read.delim() A better choice is use readr package to import like read_table()|read_delim()|read_csv() and read_tsv() are special cases of the more general read_delim(). We can easily see their differences. as a . to _ From data structure to see, base-R import to data.frame and readr import to tibble. str:tibble is more useful. There are more Particular packages to import data like RIO(use a command import for all data formats ) . We are not going to introduce, you can search more information by google. 3.1 Data From I download Titanic Dataset for predict from kaggle. it seems like a little dataset,but it is useful to learn machine learning since it is a complete machine learning project . Now let‚Äôs begin with these three datasets below. ## [1] &quot;gender_submission.csv&quot; &quot;pre.csv&quot; &quot;test.csv&quot; &quot;train.csv&quot; 3.2 Variable_Explain Variable in file means what??? let‚Äôs see Variable Definition Key survival Survival 0 = No, 1 = Yes pclass Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd sex Sex Age Age in years sibsp # of siblings / spouses aboard the Titanic parch # of parents / children aboard the Titanic ticket Ticket number fare Passenger fare cabin Cabin number embarked Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton 3.3 View of datasets Below is our train dataset and test dataset train data ## # A tibble: 891 √ó 12 ## PassengerId Survived Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 0 3 Braund, Mr. Owen Harris male 22 1 0 A/5 21171 7.25 &lt;NA&gt; S ## 2 2 1 1 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female 38 1 0 PC 17599 71.3 C85 C ## 3 3 1 3 Heikkinen, Miss. Laina female 26 0 0 STON/O2. 3101282 7.92 &lt;NA&gt; S ## 4 4 1 1 Futrelle, Mrs. Jacques Heath (Lily May Peel) female 35 1 0 113803 53.1 C123 S ## 5 5 0 3 Allen, Mr. William Henry male 35 0 0 373450 8.05 &lt;NA&gt; S ## 6 6 0 3 Moran, Mr. James male NA 0 0 330877 8.46 &lt;NA&gt; Q ## 7 7 0 1 McCarthy, Mr. Timothy J male 54 0 0 17463 51.9 E46 S ## 8 8 0 3 Palsson, Master. Gosta Leonard male 2 3 1 349909 21.1 &lt;NA&gt; S ## 9 9 1 3 Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg) female 27 0 2 347742 11.1 &lt;NA&gt; S ## 10 10 1 2 Nasser, Mrs. Nicholas (Adele Achem) female 14 1 0 237736 30.1 &lt;NA&gt; C ## # ‚Ä¶ with 881 more rows test data ## # A tibble: 418 √ó 11 ## PassengerId Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 892 3 Kelly, Mr. James male 34.5 0 0 330911 7.83 &lt;NA&gt; Q ## 2 893 3 Wilkes, Mrs. James (Ellen Needs) female 47 1 0 363272 7 &lt;NA&gt; S ## 3 894 2 Myles, Mr. Thomas Francis male 62 0 0 240276 9.69 &lt;NA&gt; Q ## 4 895 3 Wirz, Mr. Albert male 27 0 0 315154 8.66 &lt;NA&gt; S ## 5 896 3 Hirvonen, Mrs. Alexander (Helga E Lindqvist) female 22 1 1 3101298 12.3 &lt;NA&gt; S ## 6 897 3 Svensson, Mr. Johan Cervin male 14 0 0 7538 9.22 &lt;NA&gt; S ## 7 898 3 Connolly, Miss. Kate female 30 0 0 330972 7.63 &lt;NA&gt; Q ## 8 899 2 Caldwell, Mr. Albert Francis male 26 1 1 248738 29 &lt;NA&gt; S ## 9 900 3 Abrahim, Mrs. Joseph (Sophie Halaut Easu) female 18 0 0 2657 7.23 &lt;NA&gt; C ## 10 901 3 Davies, Mr. John Samuel male 21 2 0 A/4 48871 24.2 &lt;NA&gt; S ## # ‚Ä¶ with 408 more rows "],["data-view.html", "Chapter 4 Data view 4.1 Data report overview 4.2 Codebook summary table 4.3 Variable list 4.4 Fare", " Chapter 4 Data view As we all know, we need to convert a character type variable to a factor type if the column is a category column. checking data_column definition and data type in column can help us make a decision . After checking we change some column to factor train ## # A tibble: 891 √ó 12 ## PassengerId Survived Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt; ## 1 1 0 3 Braund, Mr. Owen Harris male 22 1 0 A/5 21171 7.25 &lt;NA&gt; S ## 2 2 1 1 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female 38 1 0 PC 17599 71.3 C85 C ## 3 3 1 3 Heikkinen, Miss. Laina female 26 0 0 STON/O2. 3101282 7.92 &lt;NA&gt; S ## 4 4 1 1 Futrelle, Mrs. Jacques Heath (Lily May Peel) female 35 1 0 113803 53.1 C123 S ## 5 5 0 3 Allen, Mr. William Henry male 35 0 0 373450 8.05 &lt;NA&gt; S ## 6 6 0 3 Moran, Mr. James male NA 0 0 330877 8.46 &lt;NA&gt; Q ## 7 7 0 1 McCarthy, Mr. Timothy J male 54 0 0 17463 51.9 E46 S ## 8 8 0 3 Palsson, Master. Gosta Leonard male 2 3 1 349909 21.1 &lt;NA&gt; S ## 9 9 1 3 Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg) female 27 0 2 347742 11.1 &lt;NA&gt; S ## 10 10 1 2 Nasser, Mrs. Nicholas (Adele Achem) female 14 1 0 237736 30.1 &lt;NA&gt; C ## # ‚Ä¶ with 881 more rows test ## # A tibble: 418 √ó 11 ## PassengerId Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt; ## 1 892 3 Kelly, Mr. James male 34.5 0 0 330911 7.83 &lt;NA&gt; Q ## 2 893 3 Wilkes, Mrs. James (Ellen Needs) female 47 1 0 363272 7 &lt;NA&gt; S ## 3 894 2 Myles, Mr. Thomas Francis male 62 0 0 240276 9.69 &lt;NA&gt; Q ## 4 895 3 Wirz, Mr. Albert male 27 0 0 315154 8.66 &lt;NA&gt; S ## 5 896 3 Hirvonen, Mrs. Alexander (Helga E Lindqvist) female 22 1 1 3101298 12.3 &lt;NA&gt; S ## 6 897 3 Svensson, Mr. Johan Cervin male 14 0 0 7538 9.22 &lt;NA&gt; S ## 7 898 3 Connolly, Miss. Kate female 30 0 0 330972 7.63 &lt;NA&gt; Q ## 8 899 2 Caldwell, Mr. Albert Francis male 26 1 1 248738 29 &lt;NA&gt; S ## 9 900 3 Abrahim, Mrs. Joseph (Sophie Halaut Easu) female 18 0 0 2657 7.23 &lt;NA&gt; C ## 10 901 3 Davies, Mr. John Samuel male 21 2 0 A/4 48871 24.2 &lt;NA&gt; S ## # ‚Ä¶ with 408 more rows 4.1 Data report overview The dataset examined has the following dimensions: Feature Result Number of observations 891 Number of variables 12 4.2 Codebook summary table Label Variable Class # unique values Missing Description PassengerId numeric 891 0.00 % Survived factor 2 0.00 % Pclass factor 3 0.00 % Name character 891 0.00 % Sex factor 2 0.00 % Age numeric 89 19.87 % SibSp factor 7 0.00 % Parch factor 7 0.00 % Ticket character 681 0.00 % Fare numeric 248 0.00 % Cabin character 148 77.10 % Embarked factor 4 0.22 % 4.3 Variable list 4.3.1 PassengerId Feature Result Variable type numeric Number of missing obs. 0 (0 %) Number of unique values 891 Median 446 1st and 3rd quartiles 223.5; 668.5 Min. and max. 1; 891 4.3.2 Survived Feature Result Variable type factor Number of missing obs. 0 (0 %) Number of unique values 2 Mode ‚Äú0‚Äù Reference category 0 Observed factor levels: \"0\", \"1\". 4.3.3 Pclass Feature Result Variable type factor Number of missing obs. 0 (0 %) Number of unique values 3 Mode ‚Äú3‚Äù Reference category 1 Observed factor levels: \"1\", \"2\", \"3\". 4.3.4 Name The variable is a key (distinct values for each observation). 4.3.5 Sex Feature Result Variable type factor Number of missing obs. 0 (0 %) Number of unique values 2 Mode ‚Äúmale‚Äù Reference category male Observed factor levels: \"female\", \"male\". 4.3.6 Age Feature Result Variable type numeric Number of missing obs. 177 (19.87 %) Number of unique values 88 Median 28 1st and 3rd quartiles 20.12; 38 Min. and max. 0.42; 80 4.3.7 SibSp Feature Result Variable type factor Number of missing obs. 0 (0 %) Number of unique values 7 Mode ‚Äú0‚Äù Reference category 0 Observed factor levels: \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"8\". 4.3.8 Parch Feature Result Variable type factor Number of missing obs. 0 (0 %) Number of unique values 7 Mode ‚Äú0‚Äù Reference category 0 Observed factor levels: \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\". 4.3.9 Ticket Feature Result Variable type character Number of missing obs. 0 (0 %) Number of unique values 681 Mode ‚Äú1601‚Äù Observed factor levels: \"110152\", \"110413\", \"110465\", \"110564\", \"110813\", \"111240\", \"111320\", \"111361\", \"111369\", \"111426\", \"111427\", \"111428\", \"112050\", \"112052\", \"112053\", \"112058\", \"112059\", \"112277\", \"112379\", \"113028\", \"113043\", \"113050\", \"113051\", \"113055\", \"113056\", \"113059\", \"113501\", \"113503\", \"113505\", \"113509\", \"113510\", \"113514\", \"113572\", \"113760\", \"113767\", \"113773\", \"113776\", \"113781\", \"113783\", \"113784\", \"113786\", \"113787\", \"113788\", \"113789\", \"113792\", \"113794\", \"113796\", \"113798\", \"113800\", \"113803\", \"113804\", \"113806\", \"113807\", \"11668\", \"11751\", \"11752\", \"11753\", \"11755\", \"11765\", \"11767\", \"11769\", \"11771\", \"11774\", \"11813\", \"11967\", \"12233\", \"12460\", \"12749\", \"13049\", \"13213\", \"13214\", \"13502\", \"13507\", \"13509\", \"13567\", \"13568\", \"14311\", \"14312\", \"14313\", \"14973\", \"1601\", \"16966\", \"16988\", \"17421\", \"17453\", \"17463\", \"17464\", \"17465\", \"17466\", \"17474\", \"17764\", \"19877\", \"19928\", \"19943\", \"19947\", \"19950\", \"19952\", \"19972\", \"19988\", \"19996\", \"2003\", \"211536\", \"21440\", \"218629\", \"219533\", \"220367\", \"220845\", \"2223\", \"223596\", \"226593\", \"226875\", \"228414\", \"229236\", \"230080\", \"230136\", \"230433\", \"230434\", \"231919\", \"231945\", \"233639\", \"233866\", \"234360\", \"234604\", \"234686\", \"234818\", \"236171\", \"236852\", \"236853\", \"237442\", \"237565\", \"237668\", \"237671\", \"237736\", \"237789\", \"237798\", \"239853\", \"239854\", \"239855\", \"239856\", \"239865\", \"240929\", \"24160\", \"243847\", \"243880\", \"244252\", \"244270\", \"244278\", \"244310\", \"244358\", \"244361\", \"244367\", \"244373\", \"248698\", \"248706\", \"248723\", \"248727\", \"248731\", \"248733\", \"248738\", \"248740\", \"248747\", \"250643\", \"250644\", \"250646\", \"250647\", \"250648\", \"250649\", \"250651\", \"250652\", \"250653\", \"250655\", \"2620\", \"2623\", \"2624\", \"2625\", \"2626\", \"2627\", \"2628\", \"2629\", \"2631\", \"26360\", \"2641\", \"2647\", \"2648\", \"2649\", \"2650\", \"2651\", \"2653\", \"2659\", \"2661\", \"2662\", \"2663\", \"2664\", \"2665\", \"2666\", \"2667\", \"2668\", \"2669\", \"26707\", \"2671\", \"2672\", \"2674\", \"2677\", \"2678\", \"2680\", \"2683\", \"2685\", \"2686\", \"2687\", \"2689\", \"2690\", \"2691\", \"2693\", \"2694\", \"2695\", \"2697\", \"2699\", \"2700\", \"27042\", \"27267\", \"27849\", \"28134\", \"28206\", \"28213\", \"28220\", \"28228\", \"28403\", \"28424\", \"28425\", \"28551\", \"28664\", \"28665\", \"29011\", \"2908\", \"29103\", \"29104\", \"29105\", \"29106\", \"29108\", \"2926\", \"29750\", \"29751\", \"3101264\", \"3101265\", \"3101267\", \"3101276\", \"3101277\", \"3101278\", \"3101281\", \"3101295\", \"3101296\", \"3101298\", \"31027\", \"31028\", \"312991\", \"312992\", \"312993\", \"31418\", \"315037\", \"315082\", \"315084\", \"315086\", \"315088\", \"315089\", \"315090\", \"315093\", \"315094\", \"315096\", \"315097\", \"315098\", \"315151\", \"315153\", \"323592\", \"323951\", \"324669\", \"330877\", \"330909\", \"330919\", \"330923\", \"330931\", \"330932\", \"330935\", \"330958\", \"330959\", \"330979\", \"330980\", \"334912\", \"335097\", \"335677\", \"33638\", \"336439\", \"3411\", \"341826\", \"34218\", \"342826\", \"343095\", \"343120\", \"343275\", \"343276\", \"345364\", \"345572\", \"345763\", \"345764\", \"345765\", \"345767\", \"345769\", \"345770\", \"345773\", \"345774\", \"345777\", \"345778\", \"345779\", \"345780\", \"345781\", \"345783\", \"3460\", \"347054\", \"347060\", \"347061\", \"347062\", \"347063\", \"347064\", \"347067\", \"347068\", \"347069\", \"347071\", \"347073\", \"347074\", \"347076\", \"347077\", \"347078\", \"347080\", \"347081\", \"347082\", \"347083\", \"347085\", \"347087\", \"347088\", \"347089\", \"3474\", \"347464\", \"347466\", \"347468\", \"347470\", \"347742\", \"347743\", \"348121\", \"348123\", \"348124\", \"349201\", \"349203\", \"349204\", \"349205\", \"349206\", \"349207\", \"349208\", \"349209\", \"349210\", \"349212\", \"349213\", \"349214\", \"349215\", \"349216\", \"349217\", \"349218\", \"349219\", \"349221\", \"349222\", \"349223\", \"349224\", \"349225\", \"349227\", \"349228\", \"349231\", \"349233\", \"349234\", \"349236\", \"349237\", \"349239\", \"349240\", \"349241\", \"349242\", \"349243\", \"349244\", \"349245\", \"349246\", \"349247\", \"349248\", \"349249\", \"349251\", \"349252\", \"349253\", \"349254\", \"349256\", \"349257\", \"349909\", \"349910\", \"349912\", \"350025\", \"350026\", \"350029\", \"350034\", \"350035\", \"350036\", \"350042\", \"350043\", \"350046\", \"350047\", \"350048\", \"350050\", \"350052\", \"350060\", \"350404\", \"350406\", \"350407\", \"350417\", \"35273\", \"35281\", \"35851\", \"35852\", \"358585\", \"36209\", \"362316\", \"363291\", \"363294\", \"363592\", \"364498\", \"364499\", \"364500\", \"364506\", \"364511\", \"364512\", \"364516\", \"364846\", \"364848\", \"364849\", \"364850\", \"364851\", \"365222\", \"365226\", \"36568\", \"367226\", \"367228\", \"367229\", \"367230\", \"367231\", \"367232\", \"367655\", \"368323\", \"36864\", \"36865\", \"36866\", \"368703\", \"36928\", \"36947\", \"36963\", \"36967\", \"36973\", \"370129\", \"370365\", \"370369\", \"370370\", \"370371\", \"370372\", \"370373\", \"370375\", \"370376\", \"370377\", \"371060\", \"371110\", \"371362\", \"372622\", \"373450\", \"374746\", \"374887\", \"374910\", \"376564\", \"376566\", \"382649\", \"382651\", \"382652\", \"383121\", \"384461\", \"386525\", \"392091\", \"392092\", \"392096\", \"394140\", \"4133\", \"4134\", \"4135\", \"4136\", \"4137\", \"4138\", \"4579\", \"54636\", \"5727\", \"65303\", \"65304\", \"65306\", \"6563\", \"693\", \"695\", \"7267\", \"7534\", \"7540\", \"7545\", \"7546\", \"7552\", \"7553\", \"7598\", \"8471\", \"8475\", \"9234\", \"A./5. 2152\", \"A./5. 3235\", \"A.5. 11206\", \"A.5. 18509\", \"A/4 45380\", \"A/4 48871\", \"A/4. 20589\", \"A/4. 34244\", \"A/4. 39886\", \"A/5 21171\", \"A/5 21172\", \"A/5 21173\", \"A/5 21174\", \"A/5 2466\", \"A/5 2817\", \"A/5 3536\", \"A/5 3540\", \"A/5 3594\", \"A/5 3902\", \"A/5. 10482\", \"A/5. 13032\", \"A/5. 2151\", \"A/5. 3336\", \"A/5. 3337\", \"A/5. 851\", \"A/S 2816\", \"A4. 54510\", \"C 17369\", \"C 4001\", \"C 7075\", \"C 7076\", \"C 7077\", \"C.A. 17248\", \"C.A. 18723\", \"C.A. 2315\", \"C.A. 24579\", \"C.A. 24580\", \"C.A. 2673\", \"C.A. 29178\", \"C.A. 29395\", \"C.A. 29566\", \"C.A. 31026\", \"C.A. 31921\", \"C.A. 33111\", \"C.A. 33112\", \"C.A. 33595\", \"C.A. 34260\", \"C.A. 34651\", \"C.A. 37671\", \"C.A. 5547\", \"C.A. 6212\", \"C.A./SOTON 34068\", \"CA 2144\", \"CA. 2314\", \"CA. 2343\", \"F.C. 12750\", \"F.C.C. 13528\", \"F.C.C. 13529\", \"F.C.C. 13531\", \"Fa 265302\", \"LINE\", \"P/PP 3381\", \"PC 17318\", \"PC 17473\", \"PC 17474\", \"PC 17475\", \"PC 17476\", \"PC 17477\", \"PC 17482\", \"PC 17483\", \"PC 17485\", \"PC 17558\", \"PC 17569\", \"PC 17572\", \"PC 17582\", \"PC 17585\", \"PC 17590\", \"PC 17592\", \"PC 17593\", \"PC 17595\", \"PC 17596\", \"PC 17597\", \"PC 17599\", \"PC 17600\", \"PC 17601\", \"PC 17603\", \"PC 17604\", \"PC 17605\", \"PC 17608\", \"PC 17609\", \"PC 17610\", \"PC 17611\", \"PC 17612\", \"PC 17754\", \"PC 17755\", \"PC 17756\", \"PC 17757\", \"PC 17758\", \"PC 17759\", \"PC 17760\", \"PC 17761\", \"PP 4348\", \"PP 9549\", \"S.C./A.4. 23567\", \"S.C./PARIS 2079\", \"S.O./P.P. 3\", \"S.O./P.P. 751\", \"S.O.C. 14879\", \"S.O.P. 1166\", \"S.P. 3464\", \"S.W./PP 752\", \"SC 1748\", \"SC/AH 29037\", \"SC/AH 3085\", \"SC/AH Basle 541\", \"SC/Paris 2123\", \"SC/PARIS 2131\", \"SC/PARIS 2133\", \"SC/PARIS 2146\", \"SC/PARIS 2149\", \"SC/Paris 2163\", \"SC/PARIS 2167\", \"SCO/W 1585\", \"SO/C 14885\", \"SOTON/O.Q. 3101305\", \"SOTON/O.Q. 3101306\", \"SOTON/O.Q. 3101307\", \"SOTON/O.Q. 3101310\", \"SOTON/O.Q. 3101311\", \"SOTON/O.Q. 3101312\", \"SOTON/O.Q. 392078\", \"SOTON/O.Q. 392087\", \"SOTON/O2 3101272\", \"SOTON/O2 3101287\", \"SOTON/OQ 3101316\", \"SOTON/OQ 3101317\", \"SOTON/OQ 392076\", \"SOTON/OQ 392082\", \"SOTON/OQ 392086\", \"SOTON/OQ 392089\", \"SOTON/OQ 392090\", \"STON/O 2. 3101269\", \"STON/O 2. 3101273\", \"STON/O 2. 3101274\", \"STON/O 2. 3101275\", \"STON/O 2. 3101280\", \"STON/O 2. 3101285\", \"STON/O 2. 3101286\", \"STON/O 2. 3101288\", \"STON/O 2. 3101289\", \"STON/O 2. 3101292\", \"STON/O 2. 3101293\", \"STON/O 2. 3101294\", \"STON/O2. 3101271\", \"STON/O2. 3101279\", \"STON/O2. 3101282\", \"STON/O2. 3101283\", \"STON/O2. 3101290\", \"SW/PP 751\", \"W./C. 14258\", \"W./C. 14263\", \"W./C. 6607\", \"W./C. 6608\", \"W./C. 6609\", \"W.E.P. 5734\", \"W/C 14208\", \"WE/P 5735\". 4.4 Fare Feature Result Variable type numeric Number of missing obs. 0 (0 %) Number of unique values 248 Median 14.45 1st and 3rd quartiles 7.91; 31 Min. and max. 0; 512.33 4.4.1 Cabin Feature Result Variable type character Number of missing obs. 687 (77.1 %) Number of unique values 147 Mode ‚ÄúB96 B98‚Äù Observed factor levels: \"A10\", \"A14\", \"A16\", \"A19\", \"A20\", \"A23\", \"A24\", \"A26\", \"A31\", \"A32\", \"A34\", \"A36\", \"A5\", \"A6\", \"A7\", \"B101\", \"B102\", \"B18\", \"B19\", \"B20\", \"B22\", \"B28\", \"B3\", \"B30\", \"B35\", \"B37\", \"B38\", \"B39\", \"B4\", \"B41\", \"B42\", \"B49\", \"B5\", \"B50\", \"B51 B53 B55\", \"B57 B59 B63 B66\", \"B58 B60\", \"B69\", \"B71\", \"B73\", \"B77\", \"B78\", \"B79\", \"B80\", \"B82 B84\", \"B86\", \"B94\", \"B96 B98\", \"C101\", \"C103\", \"C104\", \"C106\", \"C110\", \"C111\", \"C118\", \"C123\", \"C124\", \"C125\", \"C126\", \"C128\", \"C148\", \"C2\", \"C22 C26\", \"C23 C25 C27\", \"C30\", \"C32\", \"C45\", \"C46\", \"C47\", \"C49\", \"C50\", \"C52\", \"C54\", \"C62 C64\", \"C65\", \"C68\", \"C7\", \"C70\", \"C78\", \"C82\", \"C83\", \"C85\", \"C86\", \"C87\", \"C90\", \"C91\", \"C92\", \"C93\", \"C95\", \"C99\", \"D\", \"D10 D12\", \"D11\", \"D15\", \"D17\", \"D19\", \"D20\", \"D21\", \"D26\", \"D28\", \"D30\", \"D33\", \"D35\", \"D36\", \"D37\", \"D45\", \"D46\", \"D47\", \"D48\", \"D49\", \"D50\", \"D56\", \"D6\", \"D7\", \"D9\", \"E10\", \"E101\", \"E12\", \"E121\", \"E17\", \"E24\", \"E25\", \"E31\", \"E33\", \"E34\", \"E36\", \"E38\", \"E40\", \"E44\", \"E46\", \"E49\", \"E50\", \"E58\", \"E63\", \"E67\", \"E68\", \"E77\", \"E8\", \"F E69\", \"F G63\", \"F G73\", \"F2\", \"F33\", \"F38\", \"F4\", \"G6\", \"T\". 4.4.2 Embarked Feature Result Variable type factor Number of missing obs. 2 (0.22 %) Number of unique values 3 Mode ‚ÄúS‚Äù Reference category S Observed factor levels: \"C\", \"Q\", \"S\". Report generation information: Created by: Cherryamme (username: cherryamme). Report creation time: Thu Nov 04 2021 21:21:15 Report was run from directory: /Users/cherryamme/Desktop/MachineLearning_bookdown dataReporter v1.0.0 [Pkg: 2021-11-02 from Github (ekstroem/dataReporter@fe844ba)] R version 4.1.1 (2021-08-10). Platform: x86_64-apple-darwin20.4.0 (64-bit)(macOS Big Sur 11.5). Function call: dataReporter::makeDataReport(data = train, mode = c(\"summarize\", \"visualize\", \"check\"), smartNum = FALSE, file = \"codebook_train.Rmd\", checks = list(character = \"showAllFactorLevels\", factor = \"showAllFactorLevels\", labelled = \"showAllFactorLevels\", haven_labelled = \"showAllFactorLevels\", numeric = NULL, integer = NULL, logical = NULL, Date = NULL), listChecks = FALSE, maxProbVals = Inf, codebook = TRUE, reportTitle = \"Codebook for train\") "],["eda-view-data.html", "Chapter 5 EDA ‚Äî‚Äî View data 5.1 simply see data 5.2 Missing values checking 5.3 Plot Missing values By DescTools 5.4 Plot Missing values By DataExplorer 5.5 values distribution checking 5.6 Correlation among variables", " Chapter 5 EDA ‚Äî‚Äî View data I try to understand the data structure and data distribution use many tools. 5.1 simply see data we can find how missing values distributed in our datasets. and we try to plot them by bar plot. describe(train) ## # A tibble: 12 √ó 8 ## variable type na na_pct unique min mean max ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 PassengerId dbl 0 0 891 1 446 891 ## 2 Survived fct 0 0 2 NA NA NA ## 3 Pclass fct 0 0 3 NA NA NA ## 4 Name chr 0 0 891 NA NA NA ## 5 Sex fct 0 0 2 NA NA NA ## 6 Age dbl 177 19.9 89 0.42 29.7 80 ## 7 SibSp fct 0 0 7 NA NA NA ## 8 Parch fct 0 0 7 NA NA NA ## 9 Ticket chr 0 0 681 NA NA NA ## 10 Fare dbl 0 0 248 0 32.2 512. ## 11 Cabin chr 687 77.1 148 NA NA NA ## 12 Embarked fct 2 0.2 4 NA NA NA describe(test) ## # A tibble: 11 √ó 8 ## variable type na na_pct unique min mean max ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 PassengerId dbl 0 0 418 892 1100. 1309 ## 2 Pclass fct 0 0 3 NA NA NA ## 3 Name chr 0 0 418 NA NA NA ## 4 Sex fct 0 0 2 NA NA NA ## 5 Age dbl 86 20.6 80 0.17 30.3 76 ## 6 SibSp fct 0 0 7 NA NA NA ## 7 Parch fct 0 0 8 NA NA NA ## 8 Ticket chr 0 0 363 NA NA NA ## 9 Fare dbl 1 0.2 170 0 35.6 512. ## 10 Cabin chr 327 78.2 77 NA NA NA ## 11 Embarked fct 0 0 3 NA NA NA 5.2 Missing values checking missing in train data profile_missing(train) ## # A tibble: 12 √ó 3 ## feature num_missing pct_missing ## &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; ## 1 PassengerId 0 0 ## 2 Survived 0 0 ## 3 Pclass 0 0 ## 4 Name 0 0 ## 5 Sex 0 0 ## 6 Age 177 0.199 ## 7 SibSp 0 0 ## 8 Parch 0 0 ## 9 Ticket 0 0 ## 10 Fare 0 0 ## 11 Cabin 687 0.771 ## 12 Embarked 2 0.00224 missing in test data profile_missing(test) ## # A tibble: 11 √ó 3 ## feature num_missing pct_missing ## &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; ## 1 PassengerId 0 0 ## 2 Pclass 0 0 ## 3 Name 0 0 ## 4 Sex 0 0 ## 5 Age 86 0.206 ## 6 SibSp 0 0 ## 7 Parch 0 0 ## 8 Ticket 0 0 ## 9 Fare 1 0.00239 ## 10 Cabin 327 0.782 ## 11 Embarked 0 0 5.3 Plot Missing values By DescTools Use these Package make us easier understand data. We can easily know two column have the most missing values. Age : double type column Cabin : characters type column We can drop column Cabin obviously,but how is the Age column? We need more exploration to stand our operations. Plot missing in Train data PlotMiss(train) train&lt;-train%&gt;%select(-Cabin) Plot missing in Test data PlotMiss(test) test&lt;-test%&gt;%select(-Cabin) 5.4 Plot Missing values By DataExplorer Plot missing in Train data plot_missing(train) Plot missing in Test data plot_missing(test) 5.5 values distribution checking before impute missing value ,we need know how data distribute. And explore if there are association among variables. we plot the distribution by some tools. plot_density(train) plot_bar(train) ## 2 columns ignored with more than 50 categories. ## Name: 891 categories ## Ticket: 681 categories 5.6 Correlation among variables now we know the distribution in train data. But can we use a simple Mean/ Mode/ Median to Fill in missing value ? We need more clues to uncover missing values. it‚Äôs useful to check if missing value is associated with other values. So we use corr.test to check it. drop NAs of Age column ,then plot a Correlation fig. plot_correlation(train[!is.na(train$Age),]) ## 2 features with more than 20 categories ignored! ## Name: 714 categories ## Ticket: 542 categories we can plot continuous variable and give a numerous Correlation coefficient. split_columns(train)$continuous%&gt;%chart.Correlation() "],["impute-missing-data.html", "Chapter 6 impute missing data", " Chapter 6 impute missing data though there are a lot of good methods to impute missing values. In this part, I try to introduce imputate by randomforest. It seems like easier to used and It is a successful methods in Machine Learning area. We can just use package randomforest or missForest. randomforest provide two methods: na.roughfix() Impute Missing Values by median/mode. rfImpute() Impute missing values in predictor data using proximity from randomForest. First we use na.roughfix() to impute Fare|Embarked column by Median|Mode. Then we use rfImpute() to impute Age column by predictoe. In test dataset,we use function na.roughfix to impute Fare Values. and use missForest for impute missing Age Values easily In train dataset,it‚Äôs same. test$Fare&lt;-na.roughfix(test$Fare) # we can simplely cover missing as Mode. # idx&lt;-is.na(train$Embarked) # train[idx,&quot;Embarked&quot;]&lt;-&quot;S&quot; train_nochr&lt;-train[!sapply(train,is_character)] test_nochr&lt;-test[!sapply(test,is_character)] train_imp&lt;-missForest(as.data.frame(train_nochr))[[1]]%&gt;%tibble() ## missForest iteration 1 in progress...done! ## missForest iteration 2 in progress...done! ## missForest iteration 3 in progress...done! ## missForest iteration 4 in progress...done! test_imp&lt;-missForest(as.data.frame(test_nochr))[[1]]%&gt;%tibble() ## missForest iteration 1 in progress...done! ## missForest iteration 2 in progress...done! ## missForest iteration 3 in progress...done! Congratulations ! Now we get the full data without Missing values . ## ## Train_imp ## # A tibble: 891 √ó 9 ## PassengerId Survived Pclass Sex Age SibSp Parch Fare Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 1 0 3 male 22 1 0 7.25 S ## 2 2 1 1 female 38 1 0 71.3 C ## 3 3 1 3 female 26 0 0 7.92 S ## 4 4 1 1 female 35 1 0 53.1 S ## 5 5 0 3 male 35 0 0 8.05 S ## 6 6 0 3 male 36.5 0 0 8.46 Q ## 7 7 0 1 male 54 0 0 51.9 S ## 8 8 0 3 male 2 3 1 21.1 S ## 9 9 1 3 female 27 0 2 11.1 S ## 10 10 1 2 female 14 1 0 30.1 C ## # ‚Ä¶ with 881 more rows ## ## Test_imp ## # A tibble: 418 √ó 8 ## PassengerId Pclass Sex Age SibSp Parch Fare Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 892 3 male 34.5 0 0 7.83 Q ## 2 893 3 female 47 1 0 7 S ## 3 894 2 male 62 0 0 9.69 Q ## 4 895 3 male 27 0 0 8.66 S ## 5 896 3 female 22 1 1 12.3 S ## 6 897 3 male 14 0 0 9.22 S ## 7 898 3 female 30 0 0 7.63 Q ## 8 899 2 male 26 1 1 29 S ## 9 900 3 female 18 0 0 7.23 C ## 10 901 3 male 21 2 0 24.2 S ## # ‚Ä¶ with 408 more rows I check the missForest imputing model with randomForest with below code: ## missForest Impute ## # A tibble: 2 √ó 9 ## PassengerId Survived Pclass Sex Age SibSp Parch Fare Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 62 1 1 female 38 0 0 80 C ## 2 830 1 1 female 62 0 0 80 C ## randomForest Impute ## 1 2 ## S S ## Levels: S C Q We can see Embarked Values in missForestis ‚ÄòC,‚Äôbut in randomForest model is ‚ÄòS.‚Äô It seems strange. missForest model is build on randomForestmodel. However,we get the data after imputing with missForest . "],["mod-build-by-randomforest.html", "Chapter 7 Mod Build by randomForest 7.1 If test data has New factor levels ? 7.2 clean new level 7.3 build randomForest Model 7.4 Model assessment", " Chapter 7 Mod Build by randomForest mod_randomforest&lt;-randomForest(train_imp[-2],train_imp$Survived) predict(mod_randomforest,test_imp) ## Error in predict.randomForest(mod_randomforest, test_imp): New factor levels not present in the training data we can see the warning :New factor levels not present in the training data. 7.1 If test data has New factor levels ? why appear this error? we then check the levels in train and test. str(train_imp) ## tibble [891 √ó 9] (S3: tbl_df/tbl/data.frame) ## $ PassengerId: num [1:891] 1 2 3 4 5 6 7 8 9 10 ... ## $ Survived : Factor w/ 2 levels &quot;0&quot;,&quot;1&quot;: 1 2 2 2 1 1 1 1 2 2 ... ## $ Pclass : Factor w/ 3 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;: 3 1 3 1 3 3 1 3 3 2 ... ## $ Sex : Factor w/ 2 levels &quot;male&quot;,&quot;female&quot;: 1 2 2 2 1 1 1 1 2 2 ... ## $ Age : num [1:891] 22 38 26 35 35 ... ## $ SibSp : Factor w/ 7 levels &quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,..: 2 2 1 2 1 1 1 4 1 2 ... ## $ Parch : Factor w/ 7 levels &quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,..: 1 1 1 1 1 1 1 2 3 1 ... ## $ Fare : num [1:891] 7.25 71.28 7.92 53.1 8.05 ... ## $ Embarked : Factor w/ 3 levels &quot;S&quot;,&quot;C&quot;,&quot;Q&quot;: 1 2 1 1 1 3 1 1 1 2 ... ## - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt; str(test_imp) ## tibble [418 √ó 8] (S3: tbl_df/tbl/data.frame) ## $ PassengerId: num [1:418] 892 893 894 895 896 897 898 899 900 901 ... ## $ Pclass : Factor w/ 3 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;: 3 3 2 3 3 3 3 2 3 3 ... ## $ Sex : Factor w/ 2 levels &quot;male&quot;,&quot;female&quot;: 1 2 1 1 2 1 2 1 2 1 ... ## $ Age : num [1:418] 34.5 47 62 27 22 14 30 26 18 21 ... ## $ SibSp : Factor w/ 7 levels &quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,..: 1 2 1 1 2 1 1 2 1 3 ... ## $ Parch : Factor w/ 8 levels &quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,..: 1 1 1 1 2 1 1 2 1 1 ... ## $ Fare : num [1:418] 7.83 7 9.69 8.66 12.29 ... ## $ Embarked : Factor w/ 3 levels &quot;Q&quot;,&quot;S&quot;,&quot;C&quot;: 1 2 1 2 2 2 1 2 3 2 ... ## - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt; It is obvious that in our train data the Parch level is 8, but in our test data ,it‚Äôs 9. we then give an detailed view. table(train_imp$Parch) ## ## 0 1 2 3 4 5 6 ## 678 118 80 5 4 5 1 table(test_imp$Parch) ## ## 0 1 2 3 4 5 6 9 ## 324 52 33 3 2 1 1 2 7.2 clean new level We try to make Parch-9 to NA in test data ,and impute them with function missForest test_imp[test_imp$Parch == 9,&quot;Parch&quot;]&lt;- NA idp&lt;-is.na(test_imp$Parch) test_imp&lt;-droplevels(test_imp) table(test_imp$Parch) ## ## 0 1 2 3 4 5 6 ## 324 52 33 3 2 1 1 test_imp&lt;-missForest(as.data.frame(test_imp))[[1]]%&gt;%tibble() ## missForest iteration 1 in progress...done! ## missForest iteration 2 in progress...done! ## missForest iteration 3 in progress...done! test_imp[idp,] ## # A tibble: 2 √ó 8 ## PassengerId Pclass Sex Age SibSp Parch Fare Embarked ## &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 1234 3 male 31.1 1 2 69.6 S ## 2 1257 3 female 27.9 1 2 69.6 S we can see the Parch-9 transform to 2. 7.3 build randomForest Model then we back to our randomForest Model. 7.4 Model assessment we load the actual Survived and compare with predictions. ## Rows: 418 Columns: 2 ## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ## Delimiter: &quot;,&quot; ## dbl (2): PassengerId, Survived ## ## ‚Ñπ Use `spec()` to retrieve the full column specification for this data. ## ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## # A tibble: 418 √ó 3 ## PassengerId Survived.actual Survived.predict ## &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 892 0 0 ## 2 893 1 0 ## 3 894 0 0 ## 4 895 0 0 ## 5 896 1 0 ## 6 897 0 0 ## 7 898 1 0 ## 8 899 0 0 ## 9 900 1 1 ## 10 901 0 0 ## # ‚Ä¶ with 408 more rows ## confusion matrix ## ## 0 1 ## 0 246 20 ## 1 35 117 "]]
